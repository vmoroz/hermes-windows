parameters:
  - name: dependsOnSetup
    type: boolean
    default : false

jobs:
  - job: Build
    timeoutInMinutes: 120
    displayName: Build Hermes
    dependsOn: 
      - ${{ if parameters.dependsOnSetup }}:
        - Setup
    strategy:
      matrix:
        DebugX64:
          BuildConfiguration: debug
          BuildPlatform: x64
        DebugX86:
          BuildConfiguration: debug
          BuildPlatform: x86
        DebugARM64:
          BuildConfiguration: debug
          BuildPlatform: arm64
        ReleaseX64:
          BuildConfiguration: release
          BuildPlatform: x64
        ReleaseX86:
          BuildConfiguration: release
          BuildPlatform: x86
        ReleaseARM64:
          BuildConfiguration: release
          BuildPlatform: arm64
    variables:
      semanticVersion: $[ dependencies.Setup.outputs['setVersions.semanticVersion'] ]
      fileVersion: $[ dependencies.Setup.outputs['setVersions.fileVersion'] ]
    steps:
      - task: PowerShell@2
        displayName: Run the build script for publish
        inputs:
          targetType: filePath
          filePath: $(Build.SourcesDirectory)\.ado\scripts\cibuild.ps1
          arguments:
            -SourcesPath:$(Build.SourcesDirectory)
            -OutputPath:$(Build.ArtifactStagingDirectory)
            -Platform:$(BuildPlatform)
            -Configuration:$(BuildConfiguration)
            -AppPlatform:uwp
            -ReleaseVersion:"$(semanticVersion)"
            -FileVersion:"$(fileVersion)"

      - script: echo TODO - Add Tests here
        displayName: '[Test] - To be Added via bug #77'

      - script: mkdir $(Build.ArtifactStagingDirectory)\_manifest\$(BuildPlatform)\$(BuildFlavor)
        displayName: ðŸ“’ Prep for Manifest

      - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
        displayName: ðŸ“’ Generate Manifest
        inputs:
          BuildDropPath: $(Build.ArtifactStagingDirectory)
          ManifestDirPath: $(Build.ArtifactStagingDirectory)/_manifest/$(BuildPlatform)/$(BuildFlavor)

      - task: PublishBuildArtifacts@1
        displayName: "Publish artifacts"
        inputs:
          artifactName: HermesArtifacts
          pathtoPublish: $(Build.ArtifactStagingDirectory)

      # Make symbols available through http://symweb.
      - task: PublishSymbols@2
        displayName: Publish symbols
        condition: not(eq(variables['Build.Reason'], 'PullRequest'))
        inputs:
          SearchPattern: $(Build.ArtifactStagingDirectory)/**/*.pdb
          SymbolServerType: TeamServices

      # Guardian does not handle cmake, so manually running Binskim
      - task: BinSkim@3
        displayName: Run Binskim Analysis
        inputs:
            InputType: 'Basic'
            Function: 'analyze'
            AnalyzeTarget: $(Build.ArtifactStagingDirectory)/**/*.dll
            AnalyzeVerbose: true
            toolVersion: 'LatestPreRelease'
        continueOnError: true
        condition: and(eq(variables.BuildConfiguration, 'Release'), not(eq(variables.BuildPlatform, 'arm64')))

      - task: ComponentGovernanceComponentDetection@0
        inputs:
          ignoreDirectories: 'website'

  - job: CreateNuGet
    dependsOn:
      - Build
    displayName: Create Nuget packages
    steps:
      - checkout: none

      # The commit tag in the nuspec requires that we use at least nuget 4.6
      - task: NuGetToolInstaller@0
        inputs:
          versionSpec: ">=4.6.0"

      - task: DownloadBuildArtifacts@0
        displayName: Download Build outputs
        inputs:
          artifactName: HermesArtifacts
          downloadPath: $(System.DefaultWorkingDirectory)

      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            $Version = (Get-Content (Join-Path $(System.DefaultWorkingDirectory) "HermesArtifacts\version") | Out-String).Trim()
            Write-Host "##vso[task.setvariable variable=Version]$Version"

      - task: NuGetCommand@2
        displayName: 'NuGet Pack'
        inputs:
          command: pack
          packagesToPack: $(System.DefaultWorkingDirectory)\HermesArtifacts\ReactNative.Hermes.Windows.nuspec
          packDestination: $(System.DefaultWorkingDirectory)\NugetRootFinal
          buildProperties: CommitId=$(Build.SourceVersion);nugetroot=$(System.DefaultWorkingDirectory)\HermesArtifacts;RepoUri=$(Build.Repository.Uri)
          versioningScheme: byEnvVar
          versionEnvVar: Version
        
      - task: NuGetCommand@2
        displayName: 'NuGet Pack'
        inputs:
          command: pack
          packagesToPack: $(System.DefaultWorkingDirectory)\HermesArtifacts\ReactNative.Hermes.Windows.Fat.nuspec
          packDestination: $(System.DefaultWorkingDirectory)\NugetRootFinal
          buildProperties: CommitId=$(Build.SourceVersion);nugetroot=$(System.DefaultWorkingDirectory)\HermesArtifacts;RepoUri=$(Build.Repository.Uri)
          versioningScheme: byEnvVar
          versionEnvVar: Version

      - task: AzureArtifacts.manifest-generator-task.manifest-generator-task.ManifestGeneratorTask@0
        displayName: ðŸ“’ Generate Manifest NuGet
        condition: not(eq(variables['Build.Reason'], 'PullRequest'))
        inputs:
          BuildDropPath: $(System.DefaultWorkingDirectory)\NugetRootFinal

      - task: PublishBuildArtifacts@1
        displayName: "Publish final nuget artifacts"
        inputs:
          PathtoPublish: $(System.DefaultWorkingDirectory)\NugetRootFinal
          ArtifactName: "Hermes-final-nuget"

